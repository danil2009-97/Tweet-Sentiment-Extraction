# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1_U4iIxeXe3W-4IkAXykm9VcqA5pPXvGQ
"""

def create_model(max_len,dropout_rate,pretrained_modelpath,load_modelpath):
    '''Create a new model'''
    from tensorflow.keras.models import Model
    from tensorflow.keras.layers import Input,Softmax,Dense,Activation,Dropout,Flatten
    from transformers import TFRobertaForQuestionAnswering,TFRobertaModel
    roberta=TFRobertaForQuestionAnswering.from_pretrained(pretrained_modelpath)
    print('*'*50)
    print('Loaded Pretrained TFRobertaForQuestionAnswering model')
    print('*'*50)
    MAX_LEN=max_len

    import tensorflow as tf
    input1 = Input(shape=(MAX_LEN,),name='input_id',dtype=tf.int32)
    input2 = Input(shape=(MAX_LEN,),name='attention_mask',dtype=tf.int32)
    start_scores,end_scores = roberta(input1,attention_mask = input2)
    drop1 = Dropout(dropout_rate)(start_scores)
    drop1  = tf.expand_dims(drop1,axis=-1)
    layer1 = tf.keras.layers.Conv1D(1,1)(drop1)
    layer1= Flatten()(layer1)
    softmax1 = Activation('softmax')(layer1)

    drop2 = Dropout(dropout_rate)(end_scores)
    drop2  = tf.expand_dims(drop2,axis=-1)
    layer2 = tf.keras.layers.Conv1D(1,1)(drop2)
    layer2 = Flatten()(layer2)
    softmax2 = Activation('softmax')(layer2)

    model = Model(inputs=[input1,input2],outputs=[softmax1,softmax2])
    model.load_weights(load_modelpath)
    print('Loaded trained model')
    print('*'*50)   


    return model